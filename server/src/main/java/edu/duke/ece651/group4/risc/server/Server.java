/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.ece651.group4.risc.server;
import java.net.*;
import java.io.*;
import java.util.ArrayList;

public class Server extends Thread{
  public ServerSocket getServerSocket() {
    return serverSocket;
  }
  public void setServerSocket(ServerSocket serverSocket) {
    this.serverSocket = serverSocket;
  }

  private ServerSocket serverSocket;
   
    public Server(int port) throws IOException
    {
       serverSocket = new ServerSocket(port);
       serverSocket.setSoTimeout(10000);
    }
    public void run()
    {
       while(true)
       {
          try
          {
            System.out.println("Waiting for client on port " + serverSocket.getLocalPort() + "...");
            Socket server = serverSocket.accept();
            System.out.println("Just connected to " + server.getRemoteSocketAddress());
            /*
            DataInputStream in = new DataInputStream(server.getInputStream());
            DataOutputStream out = new DataOutputStream(server.getOutputStream());
            System.out.println(in.readUTF());
            out.writeUTF("Thank you for connecting to " + server.getLocalSocketAddress());
            */
            ObjectOutputStream os = new ObjectOutputStream(server.getOutputStream());
            ObjectInputStream is = new ObjectInputStream(new BufferedInputStream(server.getInputStream()));
            
            // send an object to client
            ArrayList<Integer> arr = new ArrayList<>();
            arr.add(1);
            arr.add(2);
            arr.add(3);
            os.writeObject(arr);
            os.flush();

            server.close();
            os.close();
            is.close();
            /*
            in.close();
            out.close();
            */
          }catch(SocketTimeoutException s)
          {
            System.out.println("Socket timed out!");
            break;
          }catch(IOException e)
          {
            e.printStackTrace();
            break;
          }
       }
    }

  public static void main(String [] args)
    {
      //  int port = Integer.parseInt(args[0]);
        try
        {
            Thread t = new Server(6066);
            t.start();
        }catch(IOException e)
        {
            e.printStackTrace();
        }
    }
}
