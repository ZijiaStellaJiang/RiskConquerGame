/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package edu.duke.ece651.group4.risc.client;

import edu.duke.ece651.group4.risc.shared.Map;
import edu.duke.ece651.group4.risc.shared.Player;
import edu.duke.ece651.group4.risc.shared.Territory;
import edu.duke.ece651.group4.risc.shared.TextPlayer;
import java.net.*;
import java.io.*;
import java.util.ArrayList;

public class Client {
  private Map<Character> map;
  private Socket player_skd;
  private ObjectOutputStream player_out;
  private ObjectInputStream player_in;
  private int player_id;
  private BufferedReader inputReader;

  public Client(String serverName, int port, BufferedReader input) {
    inputReader = input;
    // connection to Server
    player_skd = connectServer(serverName, port);
    try {
      player_out = new ObjectOutputStream(player_skd.getOutputStream());
      player_in = new ObjectInputStream(new BufferedInputStream(player_skd.getInputStream()));
    } catch (IOException e) {
      e.printStackTrace();
    }
  }
  public static Socket connectServer(String serverName, int port) {
    try {
      System.out.println("Connecting to " + serverName + " on port " + port);
      Socket client_skd = new Socket(serverName, port);
      System.out.println("Just connected to " + client_skd.getRemoteSocketAddress());
      return client_skd;
    } catch (IOException e) {
      e.printStackTrace();
    }
    return null;
  }
  public void initializeGame() {
    try {
      // receive an object from server
      Object obj_map = player_in.readObject();
      Object obj_id = player_in.readObject();
      // display the initial map and player_id
      if (obj_map != null && obj_id != null) {
        // update the map and player_id
        map = (Map<Character>) obj_map;
        player_id = (Integer) obj_id;
        MapTextView displayInfo = new MapTextView(map, System.out);
        // display the map
        displayInfo.displayCurrentMap();
        // display player id
        displayInfo.displayPlayerMsg(player_id);
      }
    } catch (IOException e) {
      e.printStackTrace();
    } catch (ClassNotFoundException e) {
      e.printStackTrace();
    }
  }
  public String playOneRound() {
    // read multiple inputs from client
    // parse the input to order
    // send the input to server
    // receive Invalid information
    // receive new update map
    // display new update map
    return null;
  }
  public void close_connection() {
    try {
      player_out.close();
      player_in.close();
      player_skd.close();
    } catch(IOException e) {
      e.printStackTrace();
    }
  }
  public static void main(String[] args) {
    Client client = new Client("localhost", 6066, new BufferedReader(new InputStreamReader(System.in)));
    // receive initial map and id
    client.initializeGame();
    // play one round
    client.playOneRound();
  }

}
